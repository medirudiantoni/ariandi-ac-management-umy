// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @unique @default(autoincrement())
  title     String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @unique @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  image     String?
  role      Role     @relation(fields: [role_id], references: [id])
  role_id   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id       Int     @id @unique @default(autoincrement()) // tambah property name untuk: >>
  name     String? // E6 = KH. Ibrahim
  building String
  alias    String // misal: E6 305
  floor    String
  room     String // misal: 101
  fakultas String?
  prodi    String?
  AC       AC[]
}

// { building, floor, room }

model AC {
  id           Int           @id @default(autoincrement())
  unit_code    String        @unique
  brand        String
  type         String?
  PK           String?
  condition    Boolean
  is_broken    Boolean       @default(false)
  status       String        @default("Normal")
  loc_id       Int
  loc          Location      @relation(fields: [loc_id], references: [id])
  installed_at String
  Maintenance  Maintenance[]
}

model Maintenance {
  id                  Int     @id @default(autoincrement())
  acId                Int
  AC                  AC      @relation(fields: [acId], references: [id])
  start_date          String
  end_date            String?
  technician          String
  coordinator         String
  cost                Float?
  description         String?
  repair_details      String?
  replacement_details String?
  maintenance_type    String?
  status              String?
}

// { acId, start_date, technician, description, maintenance_type }
// { end_date, cost, repair_details, replacement_details, status }

// { acId, start_date, end_date, technician, cost, description, repair_details, replacement_details }
